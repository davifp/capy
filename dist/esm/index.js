import{FormControl as e,Autocomplete as l,TextField as t,FormHelperText as r,FormControlLabel as a,Checkbox as n,Switch as o,IconButton as u}from"@mui/material";import i from"react";import{useController as c}from"react-hook-form";import{DatePicker as s}from"@mui/x-date-pickers";import{Visibility as d,VisibilityOff as m}from"@mui/icons-material";function f(e,l){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&l.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)l.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]])}return t}"function"==typeof SuppressedError&&SuppressedError;const p=a=>{var{name:n,control:o,defaultValue:u,label:s,error:d,options:m,freeSolo:p=!1,multiple:v=!0,fullWidth:h=!0,noOptionsText:g="Nenhum resultado encontrado",variant:b="outlined",helperText:E}=a,O=f(a,["name","control","defaultValue","label","error","options","freeSolo","multiple","fullWidth","noOptionsText","variant","helperText"]);const y=c({control:o,name:n,defaultValue:u}).field,{onChange:V,value:x}=y,C=f(y,["onChange","value"]);return console.log(x),i.createElement(e,{error:!!d,fullWidth:h},i.createElement(l,Object.assign({options:m,fullWidth:h,freeSolo:p,value:x,multiple:v,noOptionsText:g,getOptionLabel:e=>{var l;return"string"==typeof e?(null===(l=m.find((l=>l.value===e)))||void 0===l?void 0:l.label)||e:null==e?void 0:e.label},isOptionEqualToValue:(e,l)=>e.value===l,onChange:(e,l)=>{v&&Array.isArray(l)?V((l||[]).map((e=>e.value||e))):l&&"object"==typeof l&&V(null==l?void 0:l.value)},defaultValue:u,renderInput:e=>i.createElement(t,Object.assign({error:!!d,variant:b,label:s},e))},C,O)),i.createElement(r,null,(null==d?void 0:d.message)||E))},v=l=>{var{name:t,label:o,control:u,defaultValue:s,error:d}=l,m=f(l,["name","label","control","defaultValue","error"]);const{field:{onChange:p,value:v,ref:h}}=c({control:u,name:t,defaultValue:s});return i.createElement(e,{error:!!d},i.createElement(a,{control:i.createElement(n,Object.assign({},m,{checked:v,onChange:e=>{p(e.target.checked)},inputRef:h})),label:o}),i.createElement(r,null,null==d?void 0:d.message))},h=e=>{var l,{name:t,label:r,control:a,defaultValue:n,error:o,variant:u="outlined",fullWidth:d=!0,helperText:m}=e,p=f(e,["name","label","control","defaultValue","error","variant","fullWidth","helperText"]);const v=c({control:a,name:t,defaultValue:n}).field,{onChange:h,value:g,ref:b}=v,E=f(v,["onChange","value","ref"]);return i.createElement(s,Object.assign({label:r,value:g,slotProps:Object.assign({textField:Object.assign({helperText:(null==o?void 0:o.message)||m,error:!!o,variant:u,fullWidth:d},null===(l=null==p?void 0:p.slotProps)||void 0===l?void 0:l.textField)},null==p?void 0:p.slotProps),onChange:h,inputRef:b},E,p))},g=l=>{var{name:t,label:n,control:u,defaultValue:s,error:d}=l,m=f(l,["name","label","control","defaultValue","error"]);const{field:{onChange:p,value:v,ref:h}}=c({control:u,name:t,defaultValue:s});return i.createElement(e,{error:!!d},i.createElement(a,{control:i.createElement(o,Object.assign({},m,{checked:v,onChange:e=>{p(e.target.checked)},inputRef:h})),label:n}),i.createElement(r,null,null==d?void 0:d.message))},b=e=>{var{name:l,label:r,control:a,defaultValue:n,error:o,variant:s="outlined",rows:p,type:v,fullWidth:h=!0}=e,g=f(e,["name","label","control","defaultValue","error","variant","rows","type","fullWidth"]);const[b,E]=i.useState(v),O=c({control:a,name:l,defaultValue:n}).field,{onChange:y,value:V,ref:x}=O,C=f(O,["onChange","value","ref"]),j=g.InputProps||"password"===v?{endAdornment:i.createElement(u,{onClick:()=>E("password"===b?"text":"password")},"password"===b?i.createElement(d,null):i.createElement(m,null))}:{};return i.createElement(t,Object.assign({label:r,value:V,error:Boolean(o),fullWidth:h,multiline:!!p,rows:p,type:b,InputProps:j,helperText:o&&i.createElement(i.Fragment,null,o.message),onChange:y,inputRef:x,variant:s},C,g))};export{p as RhfAutocomplete,v as RhfCheckbox,h as RhfDatePicker,g as RhfSwitch,b as RhfTextField};
//# sourceMappingURL=index.js.map
